`  作用域:
  1. 所有未定义的变量直接赋值会自动声明为全局作用域的变量
  2. window 对象的所有属性拥有全局作用域
  3. 内层作用域可以访问外层，外层不能访问内层
  4. var 声明的变量，除了函数作用域外，其他语句中不会创立独立作用域
  5. let 和 const 声明的变量存在块作用域，且不会变量提升
  6. 同作用于下不能重复使用let、const声明同名变量，var可以，后者覆盖前者
  7. for 循环的条件语句的作用域和其循环体的作用域不同，条件语句属于循环体的父级作用域
`

`  作用域链:
  1. 作用域链就是变量查找的范围
  2. 当前作用域引用变量，如果没有，会一路往父级作用域查找此变量，直到全局作用域
      如果都没有则为undefined (严格模式会报错)
  3. 变量找查路径依据的是在创建这个作用域的地方向上查找，并非是在执行时的作用域。
  4. 作用域在脚本解析阶段就已经规划好了，所以与执行阶段无关，且无法改变
`

b = 1

function a() {
  const b = 2

  return function s() {
    console.log(b)
  }
}

const s = a()
var b = 3
s() // 2